basePath: /
definitions:
  handler.CreateTaskRequest:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
    required:
    - description
    - status
    - title
    type: object
  handler.SignInRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.UpdateTaskRequest:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
    required:
    - description
    - status
    - title
    type: object
  models.AuthData:
    properties:
      access_token:
        type: string
      username:
        type: string
    type: object
  models.AuthResponse:
    properties:
      data:
        $ref: '#/definitions/models.AuthData'
      error:
        $ref: '#/definitions/models.BaseError'
    type: object
  models.BaseError:
    properties:
      message:
        type: string
    type: object
  models.BaseResponse:
    properties:
      error:
        $ref: '#/definitions/models.BaseError'
    type: object
  models.CreateTaskData:
    properties:
      task_id:
        type: integer
    type: object
  models.CreateTaskResponse:
    properties:
      data:
        $ref: '#/definitions/models.CreateTaskData'
      error:
        $ref: '#/definitions/models.BaseError'
    type: object
  models.OperationResultData:
    properties:
      success:
        type: boolean
    type: object
  models.OperationResultResponse:
    properties:
      data:
        $ref: '#/definitions/models.OperationResultData'
      error:
        $ref: '#/definitions/models.BaseError'
    type: object
  models.TaskDTO:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updateAt:
        type: string
    type: object
  models.TaskListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.TaskDTO'
        type: array
      error:
        $ref: '#/definitions/models.BaseError'
    type: object
  models.TaskResponse:
    properties:
      data:
        $ref: '#/definitions/models.TaskDTO'
      error:
        $ref: '#/definitions/models.BaseError'
    type: object
info:
  contact: {}
  description: API для управления задачами
  title: To Do API
  version: "1.0"
paths:
  /login:
    post:
      parameters:
      - description: Reserve Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SignInRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Аутентификация пользователя
      tags:
      - '"auth"'
  /sign-in:
    post:
      parameters:
      - description: Reserve Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SignInRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Регистрирует пользователя с помощью логина и пароля
      tags:
      - '"auth"'
  /tasks:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TaskListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Получить задачи
      tags:
      - '"to do"'
    post:
      parameters:
      - description: Reserve Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateTaskRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Создает задачу для пользователя
      tags:
      - '"to do"'
  /tasks/{id}:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Получить задачи по идентификатору
      tags:
      - '"to do"'
    put:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OperationResultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BaseResponse'
      summary: Удаляет задачу для пользователя
      tags:
      - '"to do"'
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
