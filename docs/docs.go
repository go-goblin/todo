// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "\"auth\""
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Reserve Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    }
                }
            }
        },
        "/sign-in": {
            "post": {
                "tags": [
                    "\"auth\""
                ],
                "summary": "Регистрирует пользователя с помощью логина и пароля",
                "parameters": [
                    {
                        "description": "Reserve Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "\"to do\""
                ],
                "summary": "Получить задачи",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TaskListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "\"to do\""
                ],
                "summary": "Создает задачу для пользователя",
                "parameters": [
                    {
                        "description": "Reserve Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "\"to do\""
                ],
                "summary": "Получить задачи по идентификатору",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "\"to do\""
                ],
                "summary": "Удаляет задачу для пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OperationResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateTaskRequest": {
            "type": "object",
            "required": [
                "description",
                "status",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handler.SignInRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateTaskRequest": {
            "type": "object",
            "required": [
                "description",
                "status",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.AuthData": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.AuthData"
                },
                "error": {
                    "$ref": "#/definitions/models.BaseError"
                }
            }
        },
        "models.BaseError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.BaseResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/models.BaseError"
                }
            }
        },
        "models.CreateTaskData": {
            "type": "object",
            "properties": {
                "task_id": {
                    "type": "integer"
                }
            }
        },
        "models.CreateTaskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.CreateTaskData"
                },
                "error": {
                    "$ref": "#/definitions/models.BaseError"
                }
            }
        },
        "models.OperationResultData": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.OperationResultResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.OperationResultData"
                },
                "error": {
                    "$ref": "#/definitions/models.BaseError"
                }
            }
        },
        "models.TaskDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                }
            }
        },
        "models.TaskListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TaskDTO"
                    }
                },
                "error": {
                    "$ref": "#/definitions/models.BaseError"
                }
            }
        },
        "models.TaskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.TaskDTO"
                },
                "error": {
                    "$ref": "#/definitions/models.BaseError"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "To Do API",
	Description:      "API для управления задачами",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
